import{A as e,G as a,e as t}from"./vendor.175b60f8.js";!function(e=".",a="__import__"){try{self[a]=new Function("u","return import(u)")}catch(t){const n=new URL(e,location),d=e=>{URL.revokeObjectURL(e.src),e.remove()};self[a]=e=>new Promise(((t,i)=>{const r=new URL(e,n);if(self[a].moduleMap[r])return t(self[a].moduleMap[r]);const o=new Blob([`import * as m from '${r}';`,`${a}.moduleMap['${r}']=m;`],{type:"text/javascript"}),s=Object.assign(document.createElement("script"),{type:"module",src:URL.createObjectURL(o),onerror(){i(new Error(`Failed to import: ${e}`)),d(s)},onload(){t(self[a].moduleMap[r]),d(s)}});document.head.appendChild(s)})),self[a].moduleMap={}}}("assets/");let n=window.innerWidth,d=window.innerHeight;const i=[14,8];n/i[0]<d/i[1]?d=i[1]*n/i[0]:n=i[0]*d/i[1];const r=[[8771072,14567967,12910438,15303267],[2537714,15899169,9493497,16237693]],o=r[Math.floor(Math.random()*r.length)],s="00101011".split("").map((e=>o[e])),l=new e({width:n,height:d,backgroundColor:15460583,antialias:!0});document.body.appendChild(l.view),l.stage.interactive=!0;const c=new a;l.stage.addChild(c);const h={width:d/32,height:d/16};let w=[1,2,3,4,4,3,2,1].map(((e,a)=>[...Array(e).keys()].map((t=>({offsetY:d*(t+1)/(e+1)-d/2,x:a/7*(6*n/10)+2*n/10,y:0,width:h.width,height:h.height,color:s[a]})))));const p={x:n/2,y:d,speed:9,decay:.99,maxSpeed:10,minSpeed:7,radius:d/70,collide:!0,alpha:1},m=(e,a)=>{const t=Math.sqrt(e**2+a**2);p.vx=e/t,p.vy=a/t},y=-Math.random(),u=(.25*Math.random()+.005)*y;m((Math.random()>=.5?1:-1)*u,y);const x=new Array(5).fill().map((()=>({scale:0}))),g=new Array(5).fill().map((()=>({scale:0})));let f=0,M=0,R=new Array(8).fill(d/2),v=new Array(8).fill(d/2);window.addEventListener("keydown",(e=>{"ArrowUp"===e.key&&(f=-1),"w"===e.key&&(M=-1),"ArrowDown"===e.key&&(f=1),"s"===e.key&&(M=1)})),window.addEventListener("keyup",(e=>{"ArrowUp"===e.key&&-1==f&&(f=0),"w"===e.key&&-1==M&&(M=0),"ArrowDown"===e.key&&1==f&&(f=0),"s"===e.key&&1==M&&(M=0)}));l.ticker.add((()=>{t.update(),(()=>{if(p.x+=p.vx*p.speed*d/1e3,p.y+=p.vy*p.speed*d/1e3,p.speed=Math.max(p.speed*p.decay,p.minSpeed),p.y-p.radius>d/3&&p.y+p.radius<2*d/3){if(p.x+p.radius>.9*n){const e=x.find((e=>0==e.scale));new t.Tween(e).to({scale:.9},1e3).easing(t.Easing.Bounce.Out).start(),new t.Tween(p).to({alpha:0,x:.9*n-p.radius,y:d/2},1e3).chain(new t.Tween(p).to({alpha:1,x:n/2,y:d},1e3).onComplete((()=>{const e=-Math.random(),a=(.25*Math.random()+.005)*e;m((Math.random()>=.5?1:-1)*a,e)}))).start()}if(p.x-p.radius<.1*n){const e=g.find((e=>0==e.scale));new t.Tween(e).to({scale:.9},1e3).easing(t.Easing.Bounce.Out).start(),new t.Tween(p).to({alpha:0,x:.1*n+p.radius,y:d/2},1e3).chain(new t.Tween(p).to({alpha:1,x:n/2,y:d},1e3).onComplete((()=>{const e=-Math.random(),a=(.25*Math.random()+.005)*e;m((Math.random()>=.5?1:-1)*a,e)}))).start()}}p.y-p.radius<0&&(p.vy=-p.vy,p.y=0+p.radius,p.speed=8),p.y+p.radius>d&&(p.vy=-p.vy,p.y=d-p.radius,p.speed=8),p.x-p.radius<.1*n&&(p.vx=-p.vx,p.x=.1*n+p.radius,p.speed=8),p.x+p.radius>.9*n&&(p.vx=-p.vx,p.x=.9*n-p.radius,p.speed=8),R=R.map(((e,a)=>{const t=[3,3,4,5,5,4,3,3][a];return e+=f/t*d/40,Math.min(Math.max(e,d/2-d/t+h.height),d/2+d/t-h.height)})),v=v.map(((e,a)=>{const t=[3,3,4,5,5,4,3,3][a];return e+=M/t*d/40,Math.min(Math.max(e,d/2-d/t+h.height),d/2+d/t-h.height)})),w=w.map(((e,a)=>e.map((e=>{let n;return e.color==o[0]?(e.y=e.offsetY+R[a],n=1):e.color==o[1]&&(e.y=e.offsetY+v[a],n=-1),p.x-p.radius<e.x+e.width/2&&p.x+p.radius>e.x-e.width/2&&p.y-p.radius<e.y+e.height/2&&p.y+p.radius>e.y-e.height/2?(new t.Tween(e).to({width:2*h.width},100).chain(new t.Tween(e).to({width:h.width},100)).start(),e.collide&&(m(Math.abs(p.x-e.x+e.width/2)*n,p.y-e.y+e.height/2),p.speed=p.maxSpeed,e.collide=!1)):e.collide=!0,e}))))})(),(()=>{c.clear(),c.lineStyle(0),c.beginFill(8947848,p.alpha),c.drawCircle(p.x,p.y,p.radius),c.endFill(),c.beginFill(8947848,1),c.drawRoundedRect(.1*n-n/80,d/3,n/40,d/3,n/160),c.drawRoundedRect(.9*n-n/80,d/3,n/40,d/3,n/160),c.endFill(),c.beginFill(15658734,1),c.drawRect(0,d/3+n/80,.1*n,d/3-n/40),c.drawRect(.9*n,d/3+n/80,.1*n,d/3-n/40),c.endFill(),[].concat(...w).map((e=>{c.beginFill(e.color,1),c.drawRoundedRect(e.x-e.width/2,e.y-e.height/2,e.width,e.height,e.width/2),c.endFill()})),c.beginFill(16777215,1);for(const e in new Array(5).fill())c.drawRoundedRect(.96*n-.02*d-.04*n*1,e*(.005*n-.2*d)+1*(.005*n-.1*d)+.92*d-.025*n,.08*n*1,1*(.2*d-.01*n),10),c.drawRoundedRect(.04*n+.02*d-.04*n*1,e*(.005*n-.2*d)+1*(.005*n-.1*d)+.92*d-.025*n,.08*n*1,1*(.2*d-.01*n),10);c.endFill(),c.beginFill(o[2],1),x.map(((e,a)=>{const t=e.scale;c.drawRoundedRect(.04*n+.02*d-.04*n*t,a*(.005*n-.2*d)+(.92*d-.025*n)-t*(.1*d-.005*n),.08*n*t,t*(.2*d-.01*n),10*t)})),c.endFill(),c.beginFill(o[3],1),g.map(((e,a)=>{const t=e.scale;c.drawRoundedRect(.96*n-.02*d-.04*n*t,a*(.005*n-.2*d)+(.92*d-.025*n)-t*(.1*d-.005*n),.08*n*t,t*(.2*d-.01*n),10*t)})),c.endFill()})()}));
